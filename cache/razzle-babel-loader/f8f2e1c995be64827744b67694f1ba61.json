{"ast":null,"code":"import { useState, useEffect, useCallback } from \"react\";\nexport const useDebounce = ({\n  input,\n  delay,\n  dependency,\n  actions\n}) => {\n  const {\n    0: state,\n    1: setState\n  } = useState();\n  const debounce = useCallback(() => {}, []);\n  useEffect(() => {\n    const timeout = setTimeout(() => {// actions;\n    }, delay);\n    console.log(\"DEBOUNCE INPUT:\", input); // console.log(\"ACTIONS:\", actions);\n\n    return () => {\n      console.log(\"CLEAR\");\n      clearTimeout(timeout);\n    };\n  }, [debounce]);\n  useEffect(() => {// do something\n  }, [dependency]);\n};","map":{"version":3,"sources":["H:/dev/my_workflow/my-app/src/client/hooks/use-debounce/index.tsx"],"names":["useState","useEffect","useCallback","useDebounce","input","delay","dependency","actions","state","setState","debounce","timeout","setTimeout","console","log","clearTimeout"],"mappings":"AAAA,SAAgBA,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AAQA,OAAO,MAAMC,WAAW,GAAG,CAAC;AACxBC,EAAAA,KADwB;AAExBC,EAAAA,KAFwB;AAGxBC,EAAAA,UAHwB;AAIxBC,EAAAA;AAJwB,CAAD,KAKJ;AACnB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,EAAlC;AAEA,QAAMU,QAAQ,GAAGR,WAAW,CAAC,MAAM,CAAE,CAAT,EAAW,EAAX,CAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,OAAO,GAAGC,UAAU,CAAC,MAAM,CAC7B;AACH,KAFyB,EAEvBP,KAFuB,CAA1B;AAGAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BV,KAA/B,EAJY,CAKZ;;AACA,WAAO,MAAM;AACTS,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAC,MAAAA,YAAY,CAACJ,OAAD,CAAZ;AACH,KAHD;AAIH,GAVQ,EAUN,CAACD,QAAD,CAVM,CAAT;AAYAT,EAAAA,SAAS,CAAC,MAAM,CACZ;AACH,GAFQ,EAEN,CAACK,UAAD,CAFM,CAAT;AAGH,CAzBM","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\ninterface IDebounceParams {\r\n    input: string;\r\n    delay: number;\r\n    dependency: string;\r\n    actions?: () => void;\r\n}\r\nexport const useDebounce = ({\r\n    input,\r\n    delay,\r\n    dependency,\r\n    actions,\r\n}: IDebounceParams) => {\r\n    const [state, setState] = useState();\r\n\r\n    const debounce = useCallback(() => {}, []);\r\n\r\n    useEffect(() => {\r\n        const timeout = setTimeout(() => {\r\n            // actions;\r\n        }, delay);\r\n        console.log(\"DEBOUNCE INPUT:\", input);\r\n        // console.log(\"ACTIONS:\", actions);\r\n        return () => {\r\n            console.log(\"CLEAR\");\r\n            clearTimeout(timeout);\r\n        };\r\n    }, [debounce]);\r\n\r\n    useEffect(() => {\r\n        // do something\r\n    }, [dependency]);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}