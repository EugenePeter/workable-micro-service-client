{"ast":null,"code":"var _jsxFileName = \"H:\\\\dev\\\\my_workflow\\\\my-app\\\\src\\\\client\\\\applications\\\\search-vacancies\\\\InputSearch.tsx\",\n    _this = this;\n\nvar __jsx = React.createElement;\nimport React, { useContext } from \"react\";\nimport SearchContext from \"./context/stateContext\";\nimport { DispatchSearch } from \"./SearchProvider\";\nimport { useDebounce } from \"../../hooks\";\n\nvar InputSearch = function InputSearch() {\n  var _useContext = useContext(SearchContext),\n      actor = _useContext.actor,\n      actions = _useContext.actions;\n\n  var dispatch = useContext(DispatchSearch);\n\n  var handleSubmit = function handleSubmit() {\n    alert(\"SUBMIT\");\n  };\n\n  var handleChange = function handleChange(event) {\n    var value = event.target.value; // actions.send();\n\n    useDebounce({\n      input: \"\",\n      delay: 500,\n      dependency: \"\"\n    });\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    onClick: function onClick() {\n      return actions.interpretedSend(\"SOME_ACTION\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"CLICK ME\"), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: \"\",\n    placeholder: \"find vacancies\",\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  })), __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, actor.value));\n};\n\nexport default InputSearch;","map":{"version":3,"sources":["H:/dev/my_workflow/my-app/src/client/applications/search-vacancies/InputSearch.tsx"],"names":["React","useContext","SearchContext","DispatchSearch","useDebounce","InputSearch","actor","actions","dispatch","handleSubmit","alert","handleChange","event","value","target","input","delay","dependency","interpretedSend"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,oBAA2BJ,UAAU,CAACC,aAAD,CAArC;AAAA,MAAQI,KAAR,eAAQA,KAAR;AAAA,MAAeC,OAAf,eAAeA,OAAf;;AACA,MAAMC,QAAQ,GAAGP,UAAU,CAACE,cAAD,CAA3B;;AAEA,MAAMM,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvBC,IAAAA,KAAK,CAAC,QAAD,CAAL;AACH,GAFD;;AAIA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC5B,QAAQC,KAAR,GAAkBD,KAAK,CAACE,MAAxB,CAAQD,KAAR,CAD4B,CAE5B;;AAEAT,IAAAA,WAAW,CAAC;AACRW,MAAAA,KAAK,EAAE,EADC;AAERC,MAAAA,KAAK,EAAE,GAFC;AAGRC,MAAAA,UAAU,EAAE;AAHJ,KAAD,CAAX;AAKH,GATD;;AAUA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAI,IAAA,OAAO,EAAE;AAAA,aAAMV,OAAO,CAACW,eAAR,CAAwB,aAAxB,CAAN;AAAA,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAII;AAAM,IAAA,QAAQ,EAAET,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,KAAK,EAAC,EAFV;AAGI,IAAA,WAAW,EAAC,gBAHhB;AAII,IAAA,QAAQ,EAAEE,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKL,KAAK,CAACO,KAAX,CAZJ,CADJ;AAgBH,CAlCD;;AAoCA,eAAeR,WAAf","sourcesContent":["import React, { useContext } from \"react\";\r\nimport SearchContext from \"./context/stateContext\";\r\nimport { DispatchSearch } from \"./SearchProvider\";\r\nimport { useDebounce } from \"../../hooks\";\r\n\r\nconst InputSearch = () => {\r\n    const { actor, actions } = useContext(SearchContext);\r\n    const dispatch = useContext(DispatchSearch);\r\n\r\n    const handleSubmit = () => {\r\n        alert(\"SUBMIT\");\r\n    };\r\n\r\n    const handleChange = (event) => {\r\n        const { value } = event.target;\r\n        // actions.send();\r\n\r\n        useDebounce({\r\n            input: \"\",\r\n            delay: 500,\r\n            dependency: \"\",\r\n        });\r\n    };\r\n    return (\r\n        <div>\r\n            <h1 onClick={() => actions.interpretedSend(\"SOME_ACTION\")}>\r\n                CLICK ME\r\n            </h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value=\"\"\r\n                    placeholder=\"find vacancies\"\r\n                    onChange={handleChange}\r\n                />\r\n            </form>\r\n            <h1>{actor.value}</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputSearch;\r\n"]},"metadata":{},"sourceType":"module"}