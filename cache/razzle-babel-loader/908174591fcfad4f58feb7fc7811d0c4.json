{"ast":null,"code":"import store from 'store2';\n\nvar toCacheKey = function toCacheKey(workflow_type, instance) {\n  return \"state:\".concat(workflow_type, \"-\").concat(instance);\n};\n\nvar services = {\n  checkCache: function checkCache(_ref) {\n    var workflow_type = _ref.workflow_type,\n        instance = _ref.instance;\n    return new Promise(function (res, rej) {\n      var cache_key = store.get(toCacheKey(workflow_type, instance));\n\n      if (!cache_key) {\n        rej(new Error('Cache does not exist'));\n      }\n\n      res(cache_key);\n    });\n  }\n};\nexport default services;","map":{"version":3,"sources":["H:/dev/my_workflow/my-app/src/client/applications/search-vacancies/machine/options/services/promises.ts"],"names":["store","toCacheKey","workflow_type","instance","services","checkCache","Promise","res","rej","cache_key","get","Error"],"mappings":"AAGA,OAAOA,KAAP,MAAkB,QAAlB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,aAAD,EAAwBC,QAAxB;AAAA,yBACRD,aADQ,cACSC,QADT;AAAA,CAAnB;;AAGA,IAAMC,QAA0D,GAAG;AACjEC,EAAAA,UAAU,EAAE;AAAA,QAAGH,aAAH,QAAGA,aAAH;AAAA,QAAkBC,QAAlB,QAAkBA,QAAlB;AAAA,WACV,IAAIG,OAAJ,CAAY,UAACC,GAAD,EAAMC,GAAN,EAAc;AACxB,UAAMC,SAAS,GAAGT,KAAK,CAACU,GAAN,CAAUT,UAAU,CAACC,aAAD,EAAgBC,QAAhB,CAApB,CAAlB;;AACA,UAAI,CAACM,SAAL,EAAgB;AACdD,QAAAA,GAAG,CAAC,IAAIG,KAAJ,CAAU,sBAAV,CAAD,CAAH;AACD;;AACDJ,MAAAA,GAAG,CAACE,SAAD,CAAH;AACD,KAND,CADU;AAAA;AADqD,CAAnE;AAWA,eAAeL,QAAf","sourcesContent":["import { ServiceConfig } from 'xstate';\nimport { IContext, IMachineEvents } from '../../types';\nimport { IRecord } from '../../types';\nimport store from 'store2';\n\nconst toCacheKey = (workflow_type: string, instance: string | number) =>\n  `state:${workflow_type}-${instance}`;\n\nconst services: IRecord<ServiceConfig<IContext, IMachineEvents>> = {\n  checkCache: ({ workflow_type, instance }) =>\n    new Promise((res, rej) => {\n      const cache_key = store.get(toCacheKey(workflow_type, instance));\n      if (!cache_key) {\n        rej(new Error('Cache does not exist'));\n      }\n      res(cache_key);\n    }),\n};\n\nexport default services;\n"]},"metadata":{},"sourceType":"module"}