{"ast":null,"code":"import { useState, useEffect } from \"react\";\nexport const useDebounce = ({\n  input,\n  delay,\n  dependency,\n  actions_type,\n  send\n}) => {\n  const {\n    0: state,\n    1: setState\n  } = useState();\n  useEffect(() => {\n    // do something\n    const timeout = setTimeout(() => {\n      console.log(\"DEBOUNCE INPUT:\", input);\n      send({\n        type: actions_type,\n        payload: input\n      });\n    }, delay);\n    return () => {\n      clearTimeout(timeout);\n      console.log(\"clearing timeout\");\n    };\n  }, [dependency]);\n};","map":{"version":3,"sources":["H:/dev/my_workflow/my-app/src/client/hooks/use-debounce/index.tsx"],"names":["useState","useEffect","useDebounce","input","delay","dependency","actions_type","send","state","setState","timeout","setTimeout","console","log","type","payload","clearTimeout"],"mappings":"AAAA,SAAgBA,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAcA,OAAO,MAAMC,WAAW,GAAG,CAAC;AACxBC,EAAAA,KADwB;AAExBC,EAAAA,KAFwB;AAGxBC,EAAAA,UAHwB;AAIxBC,EAAAA,YAJwB;AAKxBC,EAAAA;AALwB,CAAD,KAMJ;AACnB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,EAAlC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMS,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC7BC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BV,KAA/B;AACAI,MAAAA,IAAI,CAAC;AACDO,QAAAA,IAAI,EAAER,YADL;AAEDS,QAAAA,OAAO,EAAEZ;AAFR,OAAD,CAAJ;AAIH,KANyB,EAMvBC,KANuB,CAA1B;AAOA,WAAO,MAAM;AACTY,MAAAA,YAAY,CAACN,OAAD,CAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,KAHD;AAIH,GAbQ,EAaN,CAACR,UAAD,CAbM,CAAT;AAcH,CAtBM","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\ninterface ISend {\r\n    type: string;\r\n    payload?: any;\r\n}\r\n\r\ninterface IDebounceParams {\r\n    input: string;\r\n    delay: number;\r\n    dependency: string;\r\n    actions_type?: string;\r\n    send?: (params: ISend) => void;\r\n}\r\nexport const useDebounce = ({\r\n    input,\r\n    delay,\r\n    dependency,\r\n    actions_type,\r\n    send,\r\n}: IDebounceParams) => {\r\n    const [state, setState] = useState();\r\n    useEffect(() => {\r\n        // do something\r\n        const timeout = setTimeout(() => {\r\n            console.log(\"DEBOUNCE INPUT:\", input);\r\n            send({\r\n                type: actions_type,\r\n                payload: input,\r\n            });\r\n        }, delay);\r\n        return () => {\r\n            clearTimeout(timeout);\r\n            console.log(\"clearing timeout\");\r\n        };\r\n    }, [dependency]);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}