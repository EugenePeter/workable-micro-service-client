{"ast":null,"code":"import { useState, useEffect } from \"react\";\nexport const useDebounce = ({\n  input,\n  delay,\n  dependency,\n  actions_type,\n  send\n}) => {\n  const {\n    0: state,\n    1: setState\n  } = useState(\"\");\n  useEffect(() => {\n    input && input != undefined && input != null && setState(input);\n  }, [input]);\n  console.log(\"DEBOUNCE STATE:\", state);\n  useEffect(() => {\n    // do something\n    const timeout = setTimeout(() => {\n      console.log(\"DEBOUNCE INPUT:\", input);\n      input && send({\n        type: actions_type,\n        payload: input\n      });\n    }, delay);\n    return () => {\n      clearTimeout(timeout);\n      console.log(\"clearing timeout\");\n    };\n  }, [state]);\n};","map":{"version":3,"sources":["H:/dev/my_workflow/my-app/src/client/hooks/use-debounce/index.tsx"],"names":["useState","useEffect","useDebounce","input","delay","dependency","actions_type","send","state","setState","undefined","console","log","timeout","setTimeout","type","payload","clearTimeout"],"mappings":"AAAA,SAAgBA,QAAhB,EAA0BC,SAA1B,QAAiE,OAAjE;AAcA,OAAO,MAAMC,WAAW,GAAG,CAAC;AACxBC,EAAAA,KADwB;AAExBC,EAAAA,KAFwB;AAGxBC,EAAAA,UAHwB;AAIxBC,EAAAA,YAJwB;AAKxBC,EAAAA;AALwB,CAAD,KAMJ;AACnB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,IAAIA,KAAK,IAAIO,SAAlB,IAA+BP,KAAK,IAAI,IAAxC,IAAgDM,QAAQ,CAACN,KAAD,CAAxD;AACH,GAFQ,EAEN,CAACA,KAAD,CAFM,CAAT;AAIAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BJ,KAA/B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA,UAAMY,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC7BH,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BT,KAA/B;AACAA,MAAAA,KAAK,IACDI,IAAI,CAAC;AACDQ,QAAAA,IAAI,EAAET,YADL;AAEDU,QAAAA,OAAO,EAAEb;AAFR,OAAD,CADR;AAKH,KAPyB,EAOvBC,KAPuB,CAA1B;AAQA,WAAO,MAAM;AACTa,MAAAA,YAAY,CAACJ,OAAD,CAAZ;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,KAHD;AAIH,GAdQ,EAcN,CAACJ,KAAD,CAdM,CAAT;AAeH,CA9BM","sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\n\r\ninterface ISend {\r\n    type: string;\r\n    payload?: any;\r\n}\r\n\r\ninterface IDebounceParams {\r\n    input: string;\r\n    delay: number;\r\n    dependency: string;\r\n    actions_type?: string;\r\n    send?: (params: ISend) => void;\r\n}\r\nexport const useDebounce = ({\r\n    input,\r\n    delay,\r\n    dependency,\r\n    actions_type,\r\n    send,\r\n}: IDebounceParams) => {\r\n    const [state, setState] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        input && input != undefined && input != null && setState(input);\r\n    }, [input]);\r\n\r\n    console.log(\"DEBOUNCE STATE:\", state);\r\n\r\n    useEffect(() => {\r\n        // do something\r\n        const timeout = setTimeout(() => {\r\n            console.log(\"DEBOUNCE INPUT:\", input);\r\n            input &&\r\n                send({\r\n                    type: actions_type,\r\n                    payload: input,\r\n                });\r\n        }, delay);\r\n        return () => {\r\n            clearTimeout(timeout);\r\n            console.log(\"clearing timeout\");\r\n        };\r\n    }, [state]);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}