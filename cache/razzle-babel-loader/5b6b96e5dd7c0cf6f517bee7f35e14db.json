{"ast":null,"code":"var config = {\n  initial: \"waiting_for_user_input\",\n  on: {\n    SEARCH_INPUT: {\n      actions: [function (_, event) {\n        return console.log(\"SEARCH INPUT RECIEVED:\", event);\n      }, // \"sendSearchInputToService\",\n      \"assignQueryTermsToContext\"],\n      target: \"searching\"\n    }\n  },\n  states: {\n    waiting_for_user_input: {\n      id: \"loading\",\n      entry: [function (context) {\n        return console.log(\"CONTEXT:\", context);\n      }]\n    },\n    searching: {\n      id: \"search\",\n      invoke: [{\n        id: \"socketConnectionService\",\n        src: \"connectToSocketServer\"\n      }],\n      entry: [function (_, event) {\n        return console.log(\"SEARCHINggggG:\", event);\n      }, function (context) {\n        return console.log(\"CONTEXT:\", context);\n      }],\n      on: {\n        GOT_QUERY_RESULTS: {\n          actions: [\"assignQueryResultsToContext\"],\n          target: \"waiting_for_user_input\"\n        }\n      }\n    }\n  }\n};\nexport default config;","map":{"version":3,"sources":["H:/dev/my_workflow/my-app/src/client/applications/search-vacancies/machine/config.ts"],"names":["config","initial","on","SEARCH_INPUT","actions","_","event","console","log","target","states","waiting_for_user_input","id","entry","context","searching","invoke","src","GOT_QUERY_RESULTS"],"mappings":"AAGA,IAAMA,MAAuE,GACzE;AACIC,EAAAA,OAAO,EAAE,wBADb;AAEIC,EAAAA,EAAE,EAAE;AACAC,IAAAA,YAAY,EAAE;AACVC,MAAAA,OAAO,EAAE,CACL,UAACC,CAAD,EAAIC,KAAJ;AAAA,eAAcC,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,KAAtC,CAAd;AAAA,OADK,EAEL;AACA,iCAHK,CADC;AAMVG,MAAAA,MAAM,EAAE;AANE;AADd,GAFR;AAYIC,EAAAA,MAAM,EAAE;AACJC,IAAAA,sBAAsB,EAAE;AACpBC,MAAAA,EAAE,EAAE,SADgB;AAEpBC,MAAAA,KAAK,EAAE,CAAC,UAACC,OAAD;AAAA,eAAaP,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBM,OAAxB,CAAb;AAAA,OAAD;AAFa,KADpB;AAKJC,IAAAA,SAAS,EAAE;AACPH,MAAAA,EAAE,EAAE,QADG;AAEPI,MAAAA,MAAM,EAAE,CACJ;AACIJ,QAAAA,EAAE,EAAE,yBADR;AAEIK,QAAAA,GAAG,EAAE;AAFT,OADI,CAFD;AAQPJ,MAAAA,KAAK,EAAE,CACH,UAACR,CAAD,EAAIC,KAAJ;AAAA,eAAcC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BF,KAA9B,CAAd;AAAA,OADG,EAEH,UAACQ,OAAD;AAAA,eAAaP,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBM,OAAxB,CAAb;AAAA,OAFG,CARA;AAYPZ,MAAAA,EAAE,EAAE;AACAgB,QAAAA,iBAAiB,EAAE;AACfd,UAAAA,OAAO,EAAE,CAAC,6BAAD,CADM;AAEfK,UAAAA,MAAM,EAAE;AAFO;AADnB;AAZG;AALP;AAZZ,CADJ;AAwCA,eAAeT,MAAf","sourcesContent":["import { MachineConfig, AnyStateNodeDefinition } from \"xstate\";\nimport { IContext, IMachineEvents } from \"./types\";\n\nconst config: MachineConfig<IContext, AnyStateNodeDefinition, IMachineEvents> =\n    {\n        initial: \"waiting_for_user_input\",\n        on: {\n            SEARCH_INPUT: {\n                actions: [\n                    (_, event) => console.log(\"SEARCH INPUT RECIEVED:\", event),\n                    // \"sendSearchInputToService\",\n                    \"assignQueryTermsToContext\",\n                ],\n                target: \"searching\",\n            },\n        },\n        states: {\n            waiting_for_user_input: {\n                id: \"loading\",\n                entry: [(context) => console.log(\"CONTEXT:\", context)],\n            },\n            searching: {\n                id: \"search\",\n                invoke: [\n                    {\n                        id: \"socketConnectionService\",\n                        src: \"connectToSocketServer\",\n                    },\n                ],\n                entry: [\n                    (_, event) => console.log(\"SEARCHINggggG:\", event),\n                    (context) => console.log(\"CONTEXT:\", context),\n                ],\n                on: {\n                    GOT_QUERY_RESULTS: {\n                        actions: [\"assignQueryResultsToContext\"],\n                        target: \"waiting_for_user_input\",\n                    },\n                },\n            },\n        },\n    };\n\nexport default config;\n"]},"metadata":{},"sourceType":"module"}