{"ast":null,"code":"import { useState, useEffect, useCallback } from \"react\";\nexport var useDebounce = function useDebounce(_ref) {\n  var input = _ref.input,\n      delay = _ref.delay,\n      dependency = _ref.dependency,\n      actions = _ref.actions;\n\n  var _useState = useState(),\n      state = _useState[0],\n      setState = _useState[1];\n\n  var debounce = useCallback(function () {\n    var timeout = setTimeout(function () {// actions;\n    }, delay);\n    console.log(\"DEBOUNCE INPUT:\", input); // console.log(\"ACTIONS:\", actions);\n\n    return function () {\n      console.log(\"CLEAR\");\n      clearTimeout(timeout);\n    };\n  }, []);\n  useEffect(function () {\n    debounce();\n  }, [debounce]);\n  useEffect(function () {}, [dependency]);\n};","map":{"version":3,"sources":["H:/dev/my_workflow/my-app/src/client/hooks/use-debounce/index.tsx"],"names":["useState","useEffect","useCallback","useDebounce","input","delay","dependency","actions","state","setState","debounce","timeout","setTimeout","console","log","clearTimeout"],"mappings":"AAAA,SAAgBA,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AAQA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAKJ;AAAA,MAJnBC,KAImB,QAJnBA,KAImB;AAAA,MAHnBC,KAGmB,QAHnBA,KAGmB;AAAA,MAFnBC,UAEmB,QAFnBA,UAEmB;AAAA,MADnBC,OACmB,QADnBA,OACmB;;AACnB,kBAA0BP,QAAQ,EAAlC;AAAA,MAAOQ,KAAP;AAAA,MAAcC,QAAd;;AAEA,MAAMC,QAAQ,GAAGR,WAAW,CAAC,YAAM;AAC/B,QAAMS,OAAO,GAAGC,UAAU,CAAC,YAAM,CAC7B;AACH,KAFyB,EAEvBP,KAFuB,CAA1B;AAGAQ,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BV,KAA/B,EAJ+B,CAK/B;;AACA,WAAO,YAAM;AACTS,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAC,MAAAA,YAAY,CAACJ,OAAD,CAAZ;AACH,KAHD;AAIH,GAV2B,EAUzB,EAVyB,CAA5B;AAYAV,EAAAA,SAAS,CAAC,YAAM;AACZS,IAAAA,QAAQ;AACX,GAFQ,EAEN,CAACA,QAAD,CAFM,CAAT;AAIAT,EAAAA,SAAS,CAAC,YAAM,CAAE,CAAT,EAAW,CAACK,UAAD,CAAX,CAAT;AACH,CAzBM","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\n\r\ninterface IDebounceParams {\r\n    input: string;\r\n    delay: number;\r\n    dependency: string;\r\n    actions?: () => void;\r\n}\r\nexport const useDebounce = ({\r\n    input,\r\n    delay,\r\n    dependency,\r\n    actions,\r\n}: IDebounceParams) => {\r\n    const [state, setState] = useState();\r\n\r\n    const debounce = useCallback(() => {\r\n        const timeout = setTimeout(() => {\r\n            // actions;\r\n        }, delay);\r\n        console.log(\"DEBOUNCE INPUT:\", input);\r\n        // console.log(\"ACTIONS:\", actions);\r\n        return () => {\r\n            console.log(\"CLEAR\");\r\n            clearTimeout(timeout);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        debounce();\r\n    }, [debounce]);\r\n\r\n    useEffect(() => {}, [dependency]);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}