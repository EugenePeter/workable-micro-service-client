{"ast":null,"code":"var _jsxFileName = \"H:\\\\dev\\\\my_workflow\\\\my-app\\\\src\\\\client\\\\applications\\\\search-vacancies\\\\InputSearch.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext, useEffect, useState } from \"react\";\nimport SearchContext from \"./context/stateContext\";\nimport { DispatchSearch } from \"./SearchProvider\";\nimport { useDebounce } from \"../../hooks\";\n\nconst InputSearch = () => {\n  const {\n    actor,\n    actions,\n    interpret,\n    useSelector\n  } = useContext(SearchContext);\n  const dispatch = useContext(DispatchSearch);\n  const {\n    0: searchInput,\n    1: setSearchInput\n  } = useState(\"\");\n\n  const handleSubmit = () => {\n    alert(\"SUBMIT\");\n  };\n\n  const condition = state => {\n    return state.matches(\"waiting_for_user_input\");\n  };\n\n  const compare = useSelector(interpret, condition);\n  useEffect(() => {\n    setSearchInput(\"\");\n  }, [compare]);\n\n  const handleChange = event => {\n    const {\n      value\n    } = event.target;\n    setSearchInput(value);\n    console.log(\"VALUE:\", value); // actions.send();\n  };\n\n  useDebounce({\n    input: searchInput,\n    delay: 200,\n    dependency: searchInput,\n    actions_type: \"SEARCH_INPUT\",\n    send: actions.interpretedSend\n  });\n  useEffect(() => {}, [searchInput]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    onClick: () => actions.interpretedSend(\"SOME_ACTION\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"SEARCH SOMETHING\"), __jsx(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    value: searchInput,\n    placeholder: \"find vacancies\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), actor.matches(\"searching\") && __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 48\n    }\n  }, \"SEARCHING\")), __jsx(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, (actor === null || actor === void 0 ? void 0 : actor.context.query_results) && (actor === null || actor === void 0 ? void 0 : actor.context.query_results.map((item, key) => __jsx(\"li\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 25\n    }\n  }, item.name)))), __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, actor.value));\n};\n\nexport default InputSearch;","map":{"version":3,"sources":["H:/dev/my_workflow/my-app/src/client/applications/search-vacancies/InputSearch.tsx"],"names":["React","useContext","useEffect","useState","SearchContext","DispatchSearch","useDebounce","InputSearch","actor","actions","interpret","useSelector","dispatch","searchInput","setSearchInput","handleSubmit","alert","condition","state","matches","compare","handleChange","event","value","target","console","log","input","delay","dependency","actions_type","send","interpretedSend","context","query_results","map","item","key","name"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from \"react\";\r\nimport SearchContext from \"./context/stateContext\";\r\nimport { DispatchSearch } from \"./SearchProvider\";\r\nimport { useDebounce } from \"../../hooks\";\r\n\r\nconst InputSearch = () => {\r\n    const { actor, actions, interpret, useSelector } =\r\n        useContext(SearchContext);\r\n    const dispatch = useContext(DispatchSearch);\r\n\r\n    const [searchInput, setSearchInput] = useState<string>(\"\");\r\n\r\n    const handleSubmit = () => {\r\n        alert(\"SUBMIT\");\r\n    };\r\n\r\n    const condition = (state) => {\r\n        return state.matches(\"waiting_for_user_input\");\r\n    };\r\n\r\n    const compare = useSelector(interpret, condition);\r\n\r\n    useEffect(() => {\r\n        setSearchInput(\"\");\r\n    }, [compare]);\r\n\r\n    const handleChange = (event) => {\r\n        const { value } = event.target;\r\n        setSearchInput(value);\r\n        console.log(\"VALUE:\", value);\r\n        // actions.send();\r\n    };\r\n\r\n    useDebounce({\r\n        input: searchInput,\r\n        delay: 200,\r\n        dependency: searchInput,\r\n        actions_type: \"SEARCH_INPUT\",\r\n        send: actions.interpretedSend,\r\n    });\r\n    useEffect(() => {}, [searchInput]);\r\n    return (\r\n        <div>\r\n            <h1 onClick={() => actions.interpretedSend(\"SOME_ACTION\")}>\r\n                SEARCH SOMETHING\r\n            </h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    value={searchInput}\r\n                    placeholder=\"find vacancies\"\r\n                    onChange={handleChange}\r\n                />\r\n                {actor.matches(\"searching\") && <h1>SEARCHING</h1>}\r\n            </form>\r\n            <ul>\r\n                {actor?.context.query_results &&\r\n                    actor?.context.query_results.map((item, key) => (\r\n                        <li key={key}>{item.name}</li>\r\n                    ))}\r\n            </ul>\r\n            <h1>{actor.value}</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputSearch;\r\n"]},"metadata":{},"sourceType":"module"}