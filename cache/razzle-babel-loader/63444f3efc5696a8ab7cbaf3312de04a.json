{"ast":null,"code":"import _toConsumableArray from \"H:/dev/my_workflow/my-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { assign } from \"xstate\";\nvar actions = {\n  assignQueryTermsToContext: assign({\n    query: function query(_, _ref) {\n      var payload = _ref.payload;\n      return payload;\n    }\n  }),\n  assignQueryResultsToContext: assign({\n    query_results: function query_results(_ref2, _ref3) {\n      var _query_results = _ref2.query_results;\n      var payload = _ref3.payload;\n      return [].concat(_toConsumableArray(_query_results), _toConsumableArray(payload.results));\n    }\n  })\n};\nexport default actions;","map":{"version":3,"sources":["H:/dev/my_workflow/my-app/src/client/applications/search-vacancies/machine/options/actions/assigners.ts"],"names":["assign","actions","assignQueryTermsToContext","query","_","payload","assignQueryResultsToContext","query_results","results"],"mappings":";AAAA,SAA4BA,MAA5B,QAA0C,QAA1C;AAGA,IAAMC,OAAoD,GAAG;AACzDC,EAAAA,yBAAyB,EAAEF,MAAM,CAAC;AAC9BG,IAAAA,KAAK,EAAE,eAACC,CAAD;AAAA,UAAMC,OAAN,QAAMA,OAAN;AAAA,aAAoBA,OAApB;AAAA;AADuB,GAAD,CADwB;AAKzDC,EAAAA,2BAA2B,EAAEN,MAAM,CAAC;AAChCO,IAAAA,aAAa,EAAE,qCAAoC;AAAA,UAAjCA,cAAiC,SAAjCA,aAAiC;AAAA,UAAdF,OAAc,SAAdA,OAAc;AAC/C,0CAAWE,cAAX,sBAA6BF,OAAO,CAACG,OAArC;AACH;AAH+B,GAAD;AALsB,CAA7D;AAYA,eAAeP,OAAf","sourcesContent":["import { ActionFunctionMap, assign } from \"xstate\";\nimport { IContext, IMachineEvents } from \"../../types\";\n\nconst actions: ActionFunctionMap<IContext, IMachineEvents> = {\n    assignQueryTermsToContext: assign({\n        query: (_, { payload }) => payload,\n    }),\n\n    assignQueryResultsToContext: assign({\n        query_results: ({ query_results }, { payload }) => {\n            return [...query_results, ...payload.results];\n        },\n    }),\n};\n\nexport default actions;\n"]},"metadata":{},"sourceType":"module"}