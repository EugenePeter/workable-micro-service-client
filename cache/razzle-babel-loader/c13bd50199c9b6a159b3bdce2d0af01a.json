{"ast":null,"code":"import { send } from \"xstate\";\nvar actions = {\n  // invokeWorkflow: send(\n  //     ({ workflow_type, params, persist }) => ({\n  //         type: \"WORKFLOW\",\n  //         workflow_type,\n  //         params,\n  //         persist,\n  //     }),\n  //     { to: \"socketConnectionService\" }\n  // ),\n  // sendAuthKey: send(\n  //     () => ({\n  //         type: \"AUTHORIZE\",\n  //         payload: {\n  //             key: \"DNAMicro!!\",\n  //         },\n  //     }),\n  //     { to: \"socketConnectionService\" }\n  // ),\n  // sendToSocketService: send(\n  //     ({ workflow_type }, e) => ({\n  //         type: \"WORKFLOW_INPUT\",\n  //         workflow_type,\n  //         payload: e,\n  //     }),\n  //     { to: \"socketConnectionService\" }\n  // ),\n  sendSearchInputToService: send(function (_, event) {\n    return {\n      type: \"WORKFLOW_INPUT\",\n      payload: event\n    };\n  } // { to: \"socketConnectionService\" }\n  )\n};\nexport default actions;","map":{"version":3,"sources":["H:/dev/my_workflow/my-app/src/client/applications/search-vacancies/machine/options/actions/senders.ts"],"names":["send","actions","sendSearchInputToService","_","event","type","payload"],"mappings":"AAAA,SAA4BA,IAA5B,QAAwC,QAAxC;AAGA,IAAMC,OAAoD,GAAG;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,wBAAwB,EAAEF,IAAI,CAC1B,UAACG,CAAD,EAAIC,KAAJ;AAAA,WAAe;AACXC,MAAAA,IAAI,EAAE,gBADK;AAEXC,MAAAA,OAAO,EAAEF;AAFE,KAAf;AAAA,GAD0B,CAK1B;AAL0B;AA3B2B,CAA7D;AAoCA,eAAeH,OAAf","sourcesContent":["import { ActionFunctionMap, send } from \"xstate\";\nimport { IContext, IMachineEvents } from \"../../types\";\n\nconst actions: ActionFunctionMap<IContext, IMachineEvents> = {\n    // invokeWorkflow: send(\n    //     ({ workflow_type, params, persist }) => ({\n    //         type: \"WORKFLOW\",\n    //         workflow_type,\n    //         params,\n    //         persist,\n    //     }),\n    //     { to: \"socketConnectionService\" }\n    // ),\n    // sendAuthKey: send(\n    //     () => ({\n    //         type: \"AUTHORIZE\",\n    //         payload: {\n    //             key: \"DNAMicro!!\",\n    //         },\n    //     }),\n    //     { to: \"socketConnectionService\" }\n    // ),\n    // sendToSocketService: send(\n    //     ({ workflow_type }, e) => ({\n    //         type: \"WORKFLOW_INPUT\",\n    //         workflow_type,\n    //         payload: e,\n    //     }),\n    //     { to: \"socketConnectionService\" }\n    // ),\n    sendSearchInputToService: send(\n        (_, event) => ({\n            type: \"WORKFLOW_INPUT\",\n            payload: event,\n        })\n        // { to: \"socketConnectionService\" }\n    ),\n};\n\nexport default actions;\n"]},"metadata":{},"sourceType":"module"}