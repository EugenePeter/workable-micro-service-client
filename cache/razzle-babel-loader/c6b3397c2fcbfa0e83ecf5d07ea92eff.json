{"ast":null,"code":"import { useState, useEffect } from \"react\";\nexport var useDebounce = function useDebounce(_ref) {\n  var input = _ref.input,\n      delay = _ref.delay,\n      dependency = _ref.dependency,\n      actions_type = _ref.actions_type;\n\n  var _useState = useState(),\n      state = _useState[0],\n      setState = _useState[1];\n\n  useEffect(function () {\n    // do something\n    var timeout = setTimeout(function () {\n      // actions;\n      console.log(\"DEBOUNCE INPUT:\", input);\n      console.log(\"ACTIONS TYPE:\", actions_type);\n    }, delay); // console.log(\"ACTIONS:\", actions);\n\n    return function () {\n      clearTimeout(timeout);\n      console.log(\"clearing timeout:\", timeout);\n    };\n  }, [dependency]);\n};","map":{"version":3,"sources":["H:/dev/my_workflow/my-app/src/client/hooks/use-debounce/index.tsx"],"names":["useState","useEffect","useDebounce","input","delay","dependency","actions_type","state","setState","timeout","setTimeout","console","log","clearTimeout"],"mappings":"AAAA,SAAgBA,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AASA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAKJ;AAAA,MAJnBC,KAImB,QAJnBA,KAImB;AAAA,MAHnBC,KAGmB,QAHnBA,KAGmB;AAAA,MAFnBC,UAEmB,QAFnBA,UAEmB;AAAA,MADnBC,YACmB,QADnBA,YACmB;;AACnB,kBAA0BN,QAAQ,EAAlC;AAAA,MAAOO,KAAP;AAAA,MAAcC,QAAd;;AACAP,EAAAA,SAAS,CAAC,YAAM;AACZ;AACA,QAAMQ,OAAO,GAAGC,UAAU,CAAC,YAAM;AAC7B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BT,KAA/B;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BN,YAA7B;AACH,KAJyB,EAIvBF,KAJuB,CAA1B,CAFY,CAOZ;;AACA,WAAO,YAAM;AACTS,MAAAA,YAAY,CAACJ,OAAD,CAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCH,OAAjC;AACH,KAHD;AAIH,GAZQ,EAYN,CAACJ,UAAD,CAZM,CAAT;AAaH,CApBM","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\ninterface IDebounceParams {\r\n    input: string;\r\n    delay: number;\r\n    dependency: string;\r\n    actions_type?: string;\r\n    send?: () => void;\r\n}\r\nexport const useDebounce = ({\r\n    input,\r\n    delay,\r\n    dependency,\r\n    actions_type,\r\n}: IDebounceParams) => {\r\n    const [state, setState] = useState();\r\n    useEffect(() => {\r\n        // do something\r\n        const timeout = setTimeout(() => {\r\n            // actions;\r\n            console.log(\"DEBOUNCE INPUT:\", input);\r\n            console.log(\"ACTIONS TYPE:\", actions_type);\r\n        }, delay);\r\n        // console.log(\"ACTIONS:\", actions);\r\n        return () => {\r\n            clearTimeout(timeout);\r\n            console.log(\"clearing timeout:\", timeout);\r\n        };\r\n    }, [dependency]);\r\n};\r\n"]},"metadata":{},"sourceType":"module"}